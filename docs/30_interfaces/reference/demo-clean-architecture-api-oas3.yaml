openapi: 3.0.3
info:
  title: demo-clean-architecture-api
  version: '1.0'
  description: 認証認可機能を持つ基本的なデモAPI
  contact:
    name: Yui
    email: 65758369+semba-yui@users.noreply.github.com
    url: 'https://github.com/semba-yui/demo-clean-architecture-dotnet'
servers:
  - url: 'http://localhost:8080'
    description: Local
paths:
  /api/demo-clean-architecture/v1.0/auth/user/register:
    post:
      summary: ユーザー登録
      operationId: post-api-demo-clean-architecture-v1.0-user-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    user_id: 1
                properties:
                  user_id:
                    type: integer
                    minimum: 1
                    example: 1
                    format: int32
                required:
                  - user_id
              examples:
                Example 1:
                  value:
                    user_id: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    code: REGISTRATION_FAILED
                    message: アカウント登録に失敗しました
                properties:
                  code:
                    type: string
                  message:
                    type: string
                required:
                  - code
                  - message
              examples:
                REGISTRATION_FAILED:
                  value:
                    code: REGISTRATION_FAILED
                    message: アカウント登録に失敗しました
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  user_name: test-user
                  email: aaa1@example.co.jp
                  password: p@ssWord
              properties:
                user_name:
                  type: string
                  maxLength: 20
                email:
                  type: string
                  example: user@example.co.jp
                  format: email
                  maxLength: 50
                password:
                  type: string
                  format: password
                  maxLength: 30
                  minLength: 8
                  example: P@ssW0rd
              required:
                - user_name
                - email
                - password
            examples:
              Example 1:
                value:
                  user_name: ユーザー名
                  email: user@example.co.jp
                  password: P@ssW0rd
        description: ''
      parameters: []
      description: ユーザー登録を行う。
      tags:
        - user
    parameters: []
  /api/demo-clean-architecture/v1.0/auth/login:
    post:
      summary: ログイン
      operationId: post-api-demo-clean-architecture-v1.0-auth-login
      responses:
        '200':
          description: OK
components:
  schemas: {}
tags:
  - name: user
